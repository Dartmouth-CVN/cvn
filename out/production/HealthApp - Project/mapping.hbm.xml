8<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping">

<hibernate-mapping package="model" xmlns="http://www.hibernate.org/xsd/hibernate-mapping">

    <!--User Tables-->
    <class name="AbsUser" table="ABS_USER">
        <id name="userId" column="USER_ID"/>
        <discriminator column="USER_TYPE" type="string" />
        <property name="firstName"/>
        <property name="lastName" column="lastname"/>
        <property name="username"/>
        <property name="password"/>
        <property name="birthday" type="timestamp"/>
        <property name="room"/>
        <one-to-one name="contactInfo" class="Contact"
                    cascade="save-update"></one-to-one>

        <subclass name="Patient" extends="AbsUser" discriminator-value="PATIENT">
            <list name="pets" table="PET"
                  inverse="false" cascade="all">
                <key column="patient_id"/>
                <list-index column="idx"/>
                <one-to-many class="Pet"/>
            </list>
            <list name="meals" table="MEAL"
                  inverse="false" cascade="all">
                <key column="patient_id"/>
                <list-index column="idx"/>
                <one-to-many class="Meal"/>
            </list>
            <list name="relations" table="RELATION"
                  inverse="false" cascade="all">
                <key column="patient_id"/>
                <list-index column="idx"/>
                <one-to-many class="AbsRelation"/>
            </list>
            <list name="assignedStaff" table="PATIENT_STAFF"
                  inverse="false" lazy="true" fetch="select" cascade="all">
                <key column="user_id"/>
                <list-index column="idx"/>
                <many-to-many column="med_id" class="MedicalStaff" />
            </list>
        </subclass>
        <subclass name="Administrator" extends="AbsUser" discriminator-value="ADMIN">

        </subclass>
        <subclass name="MedicalStaff" extends="AbsUser" discriminator-value="MED_STAFF">
            <list name="assignedPatients" table="PATIENT_STAFF"
                  inverse="true" lazy="true" fetch="select">
                <key column="user_id"/>
                <list-index column="idx"/>
                <many-to-many column="med_id" class="MedicalStaff" />
            </list>
            <subclass name="Doctor" extends="MedicalStaff" discriminator-value="DOCTOR">
            </subclass>
            <subclass name="Nurse" extends="MedicalStaff" discriminator-value="NURSE">
            </subclass>
        </subclass>
        <subclass name="AbsRelation" extends="AbsUser" discriminator-value="RELATION">
            <property name="relationship"/>
            <subclass name="Family" extends="AbsRelation" discriminator-value="FAMILY">
                <property name="isCaregiver"/>
            </subclass>
            <subclass name="Caregiver" extends="AbsRelation" discriminator-value="CAREGIVER">
                <property name="isFamily"/>
            </subclass>
        </subclass>
    </class>
    <!--End User Tables-->

    <!--Pet Table-->
    <class name="Pet" table="PET">
        <id name="petId" column="PET_ID"/>
        <property name="name"/>
        <property name="species"/>
        <property name="allergyFriendly"/>
        <many-to-one name="patientKey" class="Patient" fetch="select">
            <column name="patient_id" not-null="true"/>
        </many-to-one>
    </class>

    <!--Meal Table-->
    <class name="Meal" table="MEAL">
        <id name="mealId" column="MEAL_ID"/>
        <property name="food"/>
        <property name="calories"/>
        <property name="rating"/>
        <property name="notes"/>
        <many-to-one name="patientKey" class="Patient" fetch="select">
            <column name="patient_id" not-null="true"/>
        </many-to-one>
    </class>

    <!--Contact Table-->
    <class name="Contact" table="CONTACT">
        <id name="contactId" column="CONTACT_ID"/>
        <list name="phoneNumbers" table="CONTACT_ELEMENT"
              inverse="false" cascade="all">
            <key column="contact_id"/>
            <list-index column="idx"/>
            <one-to-many class="ContactElement"/>
        </list>
        <list name="emails" table="CONTACT_ELEMENT"
              inverse="false" cascade="all">
            <key column="contact_id"/>
            <list-index column="idx"/>
            <one-to-many class="ContactElement"/>
        </list>
        <list name="addresses" table="CONTACT_ELEMENT"
              inverse="false" cascade="all">
            <key column="contact_id"/>
            <list-index column="idx"/>
            <one-to-many class="ContactElement"/>
        </list>
        <!--<one-to-one name="userKey" class="AbsUser"-->
                    <!--constrained="true"></one-to-one>-->
    </class>
    <!--End Contact Table-->

    <!--Contact Element Table-->
    <class name="ContactElement" table="CONTACT_ELEMENT">
        <id name="elementId" column="ELEMENT_ID">
            <generator class="native" />
        </id>
        <many-to-one name="contactKey" class="Contact" fetch="select">
            <column name="contact_id"/>
        </many-to-one>
    </class>

    <!--End Contact Element Table-->

    <!--Health Profile Table-->
    <class name="HealthProfile" table="HEALTH_PROFILE">
        <id name="healthProfileId" column="HEALTH_ID" />
        <!--<list name="allergies" table="HEALTH_ALLERGIES"-->
              <!--inverse="false" cascade="all">-->
            <!--<key column="health_id"/>-->
            <!--<list-index column="idx"/>-->
            <!--<one-to-many class="String"/>-->
        <!--</list>-->
        <!--<list name="dietaryRestrictions" table="HEALTH_DIET"-->
                      <!--inverse="false" cascade="all">-->
        <!--<key column="health_id"/>-->
        <!--<list-index column="idx"/>-->
        <!--<one-to-many class="String"/>-->
    <!--</list>-->
    </class>
    <!--End Health Profile Table-->

    <!-- Schedule <class name="Schedule" table="Schedule"> <id name="scheduleId">
        <generator class="native" /> </id> <list name="events" table="Schedule_Event">
        <key column="scheduleId" /> <many-to-many column="eventId" class="Event"
        /> </list> </class> <class name="Event" table="Event"> <id name="eventId">
        <generator class="native" /> </id> <property name="date" type="timestamp"
        /> <property name="location" /> <property name="notes" /> </class> end Schedule -->

</hibernate-mapping>