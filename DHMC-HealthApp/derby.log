----------------------------------------------------------------
Tue Apr 12 15:53:50 EDT 2016:
Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.2 - (1629631): instance a816c00e-0154-0c09-81fd-000006873450 
on database directory C:\Users\Sean\Desktop\cvn\DHMC-HealthApp\HealthApp with class loader sun.misc.Launcher$AppClassLoader@73d16e93 
Loaded from file:/C:/Users/Sean/Desktop/cvn/DHMC-HealthApp/resources/jars/derby.jar
java.vendor=Oracle Corporation
java.runtime.version=1.8.0_77-b03
user.dir=C:\Users\Sean\Desktop\cvn\DHMC-HealthApp
os.name=Windows 10
os.arch=amd64
os.version=10.0
derby.system.home=null
------------  Begin Error Message -------------

System may be in a inconsistent state, missing file C:\Users\Sean\Desktop\cvn\DHMC-HealthApp\HealthApp\log\log1.dat
------------  End Error Message -------------

----------------------------------------------------------------
Tue Apr 12 15:53:50 EDT 2016:
Shutting down instance a816c00e-0154-0c09-81fd-000006873450 on database directory C:\Users\Sean\Desktop\cvn\DHMC-HealthApp\HealthApp with class loader sun.misc.Launcher$AppClassLoader@73d16e93 
Tue Apr 12 15:53:50 EDT 2016 Thread[JavaFX Application Thread,5,main] Cleanup action starting
java.sql.SQLException: Failed to start database 'HealthApp' with class loader sun.misc.Launcher$AppClassLoader@73d16e93, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:32)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: ERROR XJ040: Failed to start database 'HealthApp' with class loader sun.misc.Launcher$AppClassLoader@73d16e93, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 21 more
Caused by: ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 18 more
============= begin nested exception, level (1) ===========
java.sql.SQLException: The conglomerate (16) requested does not exist.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:32)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 18 more
============= end nested exception, level (1) ===========
============= begin nested exception, level (2) ===========
ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:32)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
============= end nested exception, level (2) ===========
Cleanup action completed
----------------------------------------------------------------
Tue Apr 12 15:53:50 EDT 2016:
Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.2 - (1629631): instance 601a400f-0154-0c09-81fd-000006873450 
on database directory C:\Users\Sean\Desktop\cvn\DHMC-HealthApp\HealthApp with class loader sun.misc.Launcher$AppClassLoader@73d16e93 
Loaded from file:/C:/Users/Sean/Desktop/cvn/DHMC-HealthApp/resources/jars/derby.jar
java.vendor=Oracle Corporation
java.runtime.version=1.8.0_77-b03
user.dir=C:\Users\Sean\Desktop\cvn\DHMC-HealthApp
os.name=Windows 10
os.arch=amd64
os.version=10.0
derby.system.home=null
----------------------------------------------------------------
Tue Apr 12 15:53:50 EDT 2016:
Shutting down instance 601a400f-0154-0c09-81fd-000006873450 on database directory C:\Users\Sean\Desktop\cvn\DHMC-HealthApp\HealthApp with class loader sun.misc.Launcher$AppClassLoader@73d16e93 
Tue Apr 12 15:53:50 EDT 2016 Thread[JavaFX Application Thread,5,main] Cleanup action starting
java.sql.SQLException: Failed to start database 'HealthApp' with class loader sun.misc.Launcher$AppClassLoader@73d16e93, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.createTables(DatabaseHandler.java:241)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:33)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: ERROR XJ040: Failed to start database 'HealthApp' with class loader sun.misc.Launcher$AppClassLoader@73d16e93, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 22 more
Caused by: ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 19 more
============= begin nested exception, level (1) ===========
java.sql.SQLException: The conglomerate (16) requested does not exist.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.createTables(DatabaseHandler.java:241)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:33)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 19 more
============= end nested exception, level (1) ===========
============= begin nested exception, level (2) ===========
ERROR XSAI2: The conglomerate (16) requested does not exist.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.CacheableConglomerate.setIdentity(Unknown Source)
	at org.apache.derby.impl.services.cache.ConcurrentCache.find(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)
	at org.apache.derby.impl.store.access.RAMTransaction.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.openScan(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.readDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedDbProperties(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getCachedProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.getProperty(Unknown Source)
	at org.apache.derby.impl.store.access.PC_XenaVersion.upgradeIfNeeded(Unknown Source)
	at org.apache.derby.impl.store.access.PropertyConglomerate.<init>(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at org.apache.derby.jdbc.BasicEmbeddedDataSource40.getConnection(Unknown Source)
	at controller.DatabaseHandler.connect(DatabaseHandler.java:43)
	at controller.DatabaseHandler.createTables(DatabaseHandler.java:241)
	at controller.DatabaseHandler.<init>(DatabaseHandler.java:33)
	at model.MainApp.start(MainApp.java:29)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
============= end nested exception, level (2) ===========
Cleanup action completed
